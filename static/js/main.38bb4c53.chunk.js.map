{"version":3,"sources":["components/UI/Button/Button.module.css","components/Timer/Timer.module.css","components/UI/Message/Message.module.css","components/UI/Form/Form.module.css","containers/CountdownTimer/CountdownTimer.module.css","components/UI/Button/Button.js","components/Controls/Controls.js","components/UI/Message/Message.js","components/Timer/Timer.js","components/UI/Form/Form.js","containers/CountdownTimer/CountdownTimer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Button","props","btnStyles","push","classes","button","btnType","active","btnActive","btnSpeed","btnStop","btnDefault","className","join","onClick","click","children","Controls","setSpeed","speed","Message","message","timeLeft","minutes","seconds","ticking","totalTime","Timer","timerId","stop","resume","textStyles","timer","warn","blink","Form","error","onSubmit","reset","start","inputForm","type","placeholder","value","inputMinutes","onChange","inputChangeHandler","disabled","touched","CountdownTimer","startTimer","event","preventDefault","state","clearInterval","setState","currentMinutes","currentSeconds","setInterval","updatedMinutes","Math","floor","updatedSeconds","speedLevel","resetTimer","stopTimer","resumeTimer","setSpeedLevel","val","parseInt","target","Number","isInteger","container","this","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.38bb4c53.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2lgkF\",\"btnDefault\":\"Button_btnDefault__1Pv-G\",\"btnActive\":\"Button_btnActive__2kxFc\",\"btnReset\":\"Button_btnReset__3DLUQ\",\"btnStop\":\"Button_btnStop__10UhJ\",\"btnSpeed\":\"Button_btnSpeed__PHi1Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timer\":\"Timer_timer__dt39z\",\"warn\":\"Timer_warn__23pJc\",\"blink\":\"Timer_blink__lzWXr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__Junzx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input-form\":\"Form_input-form__2elkI\",\"error\":\"Form_error__1n3Zp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CountdownTimer_container__1gKsl\"};","import React from \"react\";\nimport classes from \"./Button.module.css\";\n\nfunction Button(props) {\n  const btnStyles = [];\n  btnStyles.push(classes.button);\n  switch (props.btnType) {\n    case \"speed\":\n      if (props.active) {\n        btnStyles.push(classes.btnActive);\n      } else {\n        btnStyles.push(classes.btnSpeed);\n      }\n\n      break;\n    case \"stop\":\n      btnStyles.push(classes.btnStop);\n      break;\n    default:\n      btnStyles.push(classes.btnDefault);\n      break;\n  }\n  return (\n    <button className={btnStyles.join(\" \")} onClick={props.click}>\n      {props.children}\n    </button>\n  );\n}\n\nexport default Button;\n","import React from \"react\";\nimport Button from \"../UI/Button/Button\";\n\nfunction Controls(props) {\n  return (\n    <div>\n      <Button\n        click={() => props.setSpeed(1)}\n        btnType=\"speed\"\n        active={props.speed === 1 ? true : false}\n      >\n        1X\n      </Button>\n      <Button\n        click={() => props.setSpeed(1.5)}\n        btnType=\"speed\"\n        active={props.speed === 1.5 ? true : false}\n      >\n        1.5X\n      </Button>\n      <Button\n        click={() => props.setSpeed(2)}\n        btnType=\"speed\"\n        active={props.speed === 2 ? true : false}\n      >\n        2X\n      </Button>\n    </div>\n  );\n}\n\nexport default Controls;\n","import React from \"react\";\n// CSS.\nimport classes from \"./Message.module.css\";\n\nfunction Message(props) {\n  let message = null;\n  const timeLeft = props.minutes * 60 + props.seconds;\n  if (props.ticking && timeLeft < props.totalTime / 2 && timeLeft > 0) {\n    message = <p className={classes.message}>More than halfway there!</p>;\n  } else if (props.ticking && timeLeft === 0) {\n    message = <p className={classes.message}>Time's up!</p>;\n  }\n  return message;\n}\n\nexport default Message;\n","import React from \"react\";\n// Components.\nimport Controls from \"../Controls/Controls\";\nimport Button from \"../UI/Button/Button\";\nimport Message from \"../UI/Message/Message\";\n// CSS.\nimport classes from \"./Timer.module.css\";\n\nfunction Timer(props) {\n  const timeLeft = props.minutes * 60 + props.seconds;\n  let button = null;\n  if (props.timerId && props.ticking) {\n    button = (\n      <Button click={props.stop} btnType=\"stop\">\n        Stop\n      </Button>\n    );\n  }\n  if (props.timerId && !props.ticking) {\n    button = (\n      <Button click={props.resume} btnType=\"resume\">\n        Resume\n      </Button>\n    );\n  }\n  const textStyles = [];\n  textStyles.push(classes.timer);\n  if (timeLeft <= 20 && timeLeft > 0) {\n    textStyles.push(classes.warn);\n  }\n  if (timeLeft < 10 && timeLeft > 0) {\n    textStyles.push(classes.blink);\n  }\n\n  return (\n    <div>\n      <Message\n        minutes={props.minutes}\n        seconds={props.seconds}\n        ticking={props.ticking}\n        totalTime={props.totalTime}\n      />\n      <p className={textStyles.join(\" \")}>\n        {props.minutes < 10 ? \"0\" : null}\n        {props.minutes}:{props.seconds < 10 ? \"0\" : null}\n        {props.seconds}\n      </p>\n      {button}\n      <Controls setSpeed={props.setSpeed} speed={props.speed}></Controls>\n    </div>\n  );\n}\n\nexport default Timer;\n","import React from \"react\";\n// CSS.\nimport classes from \"./Form.module.css\";\n\nfunction Form(props) {\n  let error = null;\n  if (props.error) {\n    error = <p className={classes.error}>Input is invalid.</p>;\n  }\n  return (\n    <form\n      onSubmit={props.timerId ? props.reset : props.start}\n      className={classes.inputForm}\n    >\n      {error}\n      <label>Countdown: </label>\n      <input\n        type=\"text\"\n        placeholder=\"# of minutes (1-99)\"\n        value={props.inputMinutes}\n        onChange={props.inputChangeHandler}\n        disabled={props.timerId}\n      />\n      <input\n        type=\"submit\"\n        value={props.timerId ? \"Reset\" : \"Start\"}\n        disabled={!props.touched || props.error}\n      />\n    </form>\n  );\n}\n\nexport default Form;\n","import React, { Component } from \"react\";\n// Components.\nimport Timer from \"../../components/Timer/Timer\";\nimport Form from \"../../components/UI/Form/Form\";\n// CSS.\nimport classes from \"./CountdownTimer.module.css\";\n\nclass CountdownTimer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputMinutes: \"\",\n      totalTime: 0,\n      currentMinutes: 0,\n      currentSeconds: 0,\n      speedLevel: 1,\n      timerId: null,\n      ticking: false,\n      error: false,\n      touched: false\n    };\n  }\n\n  // Start timer.\n  startTimer = event => {\n    event.preventDefault();\n    if (!this.state.touched || this.state.error) {\n      return;\n    }\n    clearInterval(this.state.timerId);\n    // Update minutes and seconds every second.\n    this.setState(\n      {\n        ...this.state,\n        totalTime: this.state.inputMinutes * 60,\n        currentMinutes: this.state.inputMinutes,\n        currentSeconds: 0\n      },\n      () => {\n        const timerId = setInterval(() => {\n          let timeLeft =\n            this.state.currentMinutes * 60 + this.state.currentSeconds;\n          // Clear timer once finished.\n          if (timeLeft === 0) {\n            clearInterval(this.state.timerId);\n          } else {\n            timeLeft = timeLeft - 1;\n            const updatedMinutes = Math.floor(timeLeft / 60);\n            const updatedSeconds = timeLeft % 60;\n            this.setState({\n              ...this.state,\n              currentMinutes: updatedMinutes,\n              currentSeconds: updatedSeconds\n            });\n          }\n        }, 1000 / this.state.speedLevel);\n        // Update timerId and ticking once timer started.\n        this.setState({\n          ...this.state,\n          timerId: timerId,\n          ticking: true,\n          inputMinutes: \"\"\n        });\n      }\n    );\n  };\n\n  // Reset Timer.\n  resetTimer = event => {\n    event.preventDefault();\n    clearInterval(this.state.timerId);\n    this.setState({\n      inputMinutes: \"\",\n      totalTime: 0,\n      currentMinutes: 0,\n      currentSeconds: 0,\n      speedLevel: 1,\n      timerId: null,\n      ticking: false,\n      error: false,\n      touched: false\n    });\n  };\n\n  // Stop timer.\n  stopTimer = () => {\n    clearInterval(this.state.timerId);\n    this.setState({\n      ...this.state,\n      ticking: false\n    });\n  };\n\n  // Resume timer.\n  resumeTimer = () => {\n    const timerId = setInterval(() => {\n      let timeLeft = this.state.currentMinutes * 60 + this.state.currentSeconds;\n      // Clear timer once finished.\n      if (timeLeft === 0) {\n        clearInterval(this.state.timerId);\n      } else {\n        timeLeft = timeLeft - 1;\n        const updatedMinutes = Math.floor(timeLeft / 60);\n        const updatedSeconds = timeLeft % 60;\n        this.setState({\n          ...this.state,\n          currentMinutes: updatedMinutes,\n          currentSeconds: updatedSeconds\n        });\n      }\n    }, 1000 / this.state.speedLevel);\n    // Update timerId and ticking once timer started.\n    this.setState({\n      ...this.state,\n      timerId: timerId,\n      ticking: true\n    });\n  };\n\n  // Change speed.\n  setSpeedLevel = speedLevel => {\n    if (!this.state.timerId || !this.state.ticking) {\n      this.setState({\n        ...this.state,\n        speedLevel: speedLevel\n      });\n    } else {\n      clearInterval(this.state.timerId);\n      this.setState(\n        {\n          ...this.state,\n          speedLevel: speedLevel\n        },\n        this.resumeTimer\n      );\n    }\n  };\n\n  // Handle user input.\n  inputChangeHandler = event => {\n    const val = parseInt(event.target.value, 10);\n    // In order to follow the time format \"MM:SS\",\n    // # of minutes should between 1 and 99 (inclusively).\n    if (!Number.isInteger(val) || val < 1 || val > 99) {\n      this.setState({\n        ...this.state,\n        error: true,\n        touched: true,\n        inputMinutes: event.target.value\n      });\n    } else {\n      this.setState({\n        ...this.state,\n        error: false,\n        touched: true,\n        inputMinutes: val\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className={classes.container}>\n        <Form\n          inputChangeHandler={this.inputChangeHandler}\n          ticking={this.state.ticking}\n          reset={this.resetTimer}\n          start={this.startTimer}\n          error={this.state.error}\n          touched={this.state.touched}\n          inputMinutes={this.state.inputMinutes}\n          timerId={this.state.timerId}\n        ></Form>\n        <Timer\n          totalTime={this.state.totalTime}\n          timerId={this.state.timerId}\n          minutes={this.state.currentMinutes}\n          seconds={this.state.currentSeconds}\n          ticking={this.state.ticking}\n          setSpeed={this.setSpeedLevel}\n          stop={this.stopTimer}\n          resume={this.resumeTimer}\n          speed={this.state.speedLevel}\n        ></Timer>\n      </div>\n    );\n  }\n}\n\nexport default CountdownTimer;\n","import React from \"react\";\nimport CountdownTimer from \"./containers/CountdownTimer/CountdownTimer\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CountdownTimer></CountdownTimer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}